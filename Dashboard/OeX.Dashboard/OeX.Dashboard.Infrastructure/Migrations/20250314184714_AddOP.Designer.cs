// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OeX.Dashboard.Infrastructure.Context;

#nullable disable

namespace OeX.Dashboard.Infrastructure.Migrations
{
    [DbContext(typeof(RNContext))]
    [Migration("20250314184714_AddOP")]
    partial class AddOP
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OeX.Dashboard.Domain.Empresas.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TempoTrabalho")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.Indicadores.IndicadorMensal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Indicador")
                        .HasColumnType("int");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<long>("Valor")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("MaquinaId");

                    b.ToTable("IndicadoresMensal");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.Manutecoes.Manutencao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataHoraFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ManagementId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<long>("MotivoManutencaoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("MaquinaId");

                    b.HasIndex("MotivoManutencaoId");

                    b.ToTable("Manutencoes");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.Maquinas.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeProdutiva")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ManagementId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.MotivosManutencao.MotivoManutencao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ManagementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("MotivosManutencao");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.MotivosParada.MotivoParada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ManagementId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("MotivosParada");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.OrdensProducao.OrdemProducao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataHoraFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ManagementId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("QuanrtidadePerdida")
                        .HasColumnType("int");

                    b.Property<int>("QuanrtidadePrevista")
                        .HasColumnType("int");

                    b.Property<int>("QuanrtidadeProduzida")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("MaquinaId");

                    b.ToTable("OrdemProducao");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.Paradas.Parada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DataHoraFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("ManagementId")
                        .HasColumnType("bigint");

                    b.Property<int>("MaquinaId")
                        .HasColumnType("int");

                    b.Property<int>("MotivoParadaId")
                        .HasColumnType("int");

                    b.Property<long>("MotivoParadaId1")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("MaquinaId");

                    b.HasIndex("MotivoParadaId1");

                    b.ToTable("Paradas");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.Indicadores.IndicadorMensal", b =>
                {
                    b.HasOne("OeX.Dashboard.Domain.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("OeX.Dashboard.Domain.Maquinas.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("MaquinaId")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Maquina");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.Manutecoes.Manutencao", b =>
                {
                    b.HasOne("OeX.Dashboard.Domain.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("OeX.Dashboard.Domain.Maquinas.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("MaquinaId")
                        .IsRequired();

                    b.HasOne("OeX.Dashboard.Domain.MotivosManutencao.MotivoManutencao", "MotivoManutencao")
                        .WithMany()
                        .HasForeignKey("MotivoManutencaoId")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Maquina");

                    b.Navigation("MotivoManutencao");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.Maquinas.Maquina", b =>
                {
                    b.HasOne("OeX.Dashboard.Domain.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.MotivosManutencao.MotivoManutencao", b =>
                {
                    b.HasOne("OeX.Dashboard.Domain.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.MotivosParada.MotivoParada", b =>
                {
                    b.HasOne("OeX.Dashboard.Domain.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.OrdensProducao.OrdemProducao", b =>
                {
                    b.HasOne("OeX.Dashboard.Domain.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("OeX.Dashboard.Domain.Maquinas.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("MaquinaId")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Maquina");
                });

            modelBuilder.Entity("OeX.Dashboard.Domain.Paradas.Parada", b =>
                {
                    b.HasOne("OeX.Dashboard.Domain.Empresas.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .IsRequired();

                    b.HasOne("OeX.Dashboard.Domain.Maquinas.Maquina", "Maquina")
                        .WithMany()
                        .HasForeignKey("MaquinaId")
                        .IsRequired();

                    b.HasOne("OeX.Dashboard.Domain.MotivosParada.MotivoParada", "MotivoParada")
                        .WithMany()
                        .HasForeignKey("MotivoParadaId1")
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Maquina");

                    b.Navigation("MotivoParada");
                });
#pragma warning restore 612, 618
        }
    }
}
